PROJECT(GmshReader CXX)
CMAKE_MINIMUM_REQUIRED (VERSION 3.2)

find_package(Boost REQUIRED)
include_directories(${BOOST_INCLUDE})

set(EXT_PROJECTS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/external")
add_subdirectory(${EXT_PROJECTS_DIR}/catch)
include_directories(${CATCH_INCLUDE_DIR} ${COMMON_INCLUDES})

add_subdirectory(${EXT_PROJECTS_DIR}/jsoncpp)
include_directories(${EXT_PROJECTS_DIR}/jsoncpp/dist/)

SET(CMAKE_CXX_STANDARD 14)
SET(GMSH_READER_LIBRARIES_INSTALL_PATH "lib")
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)

OPTION(ENABLE_DEBUG "enables debug information" TRUE)
option(ENABLE_COVERAGE "Set compiler flag for coverage analysis" FALSE)

set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeScripts ${CMAKE_MODULE_PATH})
if(ENABLE_COVERAGE)
    include(Coverage)
endif()

# set build type
IF(ENABLE_DEBUG)
  ADD_DEFINITIONS("-DDEBUG")
  SET(CMAKE_BUILD_TYPE "Debug")
ELSE(ENABLE_DEBUG)
  IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
  ENDIF(NOT CMAKE_BUILD_TYPE)
ENDIF(ENABLE_DEBUG)

include(CTest)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tests)
ADD_SUBDIRECTORY(classes)
ADD_SUBDIRECTORY(examples)
