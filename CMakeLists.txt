PROJECT(GmshReader CXX)
CMAKE_MINIMUM_REQUIRED (VERSION 3.2)

FIND_PACKAGE(Boost REQUIRED)
INCLUDE_DIRECTORIES(${BOOST_INCLUDE})

SET(EXT_PROJECTS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/external")

ADD_SUBDIRECTORY(${EXT_PROJECTS_DIR}/catch)
INCLUDE_DIRECTORIES(${CATCH_INCLUDE_DIR} ${COMMON_INCLUDES})

ADD_SUBDIRECTORY(${EXT_PROJECTS_DIR}/jsoncpp)
INCLUDE_DIRECTORIES(${EXT_PROJECTS_DIR}/jsoncpp/dist/)

SET(CMAKE_CXX_STANDARD 14)
SET(GMSH_READER_LIBRARIES_INSTALL_PATH "lib")
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)

OPTION(ENABLE_DEBUG "enables debug information" TRUE)
OPTION(ENABLE_COVERAGE "Set compiler flag for coverage analysis" FALSE)

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeScripts ${CMAKE_MODULE_PATH})
if(ENABLE_COVERAGE)
    INCLUDE(Coverage)
endif()

# set build type
IF(ENABLE_DEBUG)
  ADD_DEFINITIONS("-DDEBUG")
  SET(CMAKE_BUILD_TYPE "Debug")
ELSE(ENABLE_DEBUG)
  IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
  ENDIF(NOT CMAKE_BUILD_TYPE)
ENDIF(ENABLE_DEBUG)

INCLUDE(CTest)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tests)
ADD_SUBDIRECTORY(examples)
